# Script de d√©ploiement modernis√© pour Presence CCRB
# Version 2.0.0 - 2025

param(
    [string]$Environment = "production",
    [switch]$SkipTests = $false,
    [switch]$Force = $false
)

Write-Host "üöÄ D√©ploiement modernis√© Presence CCRB v2.0.0" -ForegroundColor Green
Write-Host "===============================================" -ForegroundColor Green

# V√©rification des pr√©requis
Write-Host "üîç V√©rification des pr√©requis..." -ForegroundColor Yellow

# V√©rifier Node.js
try {
    $nodeVersion = node --version
    Write-Host "‚úÖ Node.js: $nodeVersion" -ForegroundColor Green
} catch {
    Write-Host "‚ùå Node.js non install√©" -ForegroundColor Red
    exit 1
}

# V√©rifier npm
try {
    $npmVersion = npm --version
    Write-Host "‚úÖ npm: $npmVersion" -ForegroundColor Green
} catch {
    Write-Host "‚ùå npm non install√©" -ForegroundColor Red
    exit 1
}

# V√©rifier Git
try {
    $gitVersion = git --version
    Write-Host "‚úÖ Git: $gitVersion" -ForegroundColor Green
} catch {
    Write-Host "‚ùå Git non install√©" -ForegroundColor Red
    exit 1
}

# Installation des d√©pendances
Write-Host "üì¶ Installation des d√©pendances..." -ForegroundColor Yellow
npm install
if ($LASTEXITCODE -ne 0) {
    Write-Host "‚ùå √âchec de l'installation des d√©pendances" -ForegroundColor Red
    exit 1
}

# Installation des d√©pendances backend
Write-Host "üì¶ Installation des d√©pendances backend..." -ForegroundColor Yellow
Set-Location backend
npm install
if ($LASTEXITCODE -ne 0) {
    Write-Host "‚ùå √âchec de l'installation des d√©pendances backend" -ForegroundColor Red
    exit 1
}
Set-Location ..

# Tests (si non ignor√©s)
if (-not $SkipTests) {
    Write-Host "üß™ Ex√©cution des tests..." -ForegroundColor Yellow
    npm test
    if ($LASTEXITCODE -ne 0) {
        Write-Host "‚ùå Tests √©chou√©s" -ForegroundColor Red
        if (-not $Force) {
            exit 1
        }
        Write-Host "‚ö†Ô∏è Continuation forc√©e malgr√© les tests √©chou√©s" -ForegroundColor Yellow
    }
}

# V√©rification du code (linting)
Write-Host "üîç V√©rification du code..." -ForegroundColor Yellow
npm run lint
if ($LASTEXITCODE -ne 0) {
    Write-Host "‚ùå Erreurs de linting d√©tect√©es" -ForegroundColor Red
    if (-not $Force) {
        exit 1
    }
    Write-Host "‚ö†Ô∏è Continuation forc√©e malgr√© les erreurs de linting" -ForegroundColor Yellow
}

# V√©rification des types TypeScript
Write-Host "üîç V√©rification des types TypeScript..." -ForegroundColor Yellow
npm run type-check
if ($LASTEXITCODE -ne 0) {
    Write-Host "‚ùå Erreurs de types d√©tect√©es" -ForegroundColor Red
    if (-not $Force) {
        exit 1
    }
    Write-Host "‚ö†Ô∏è Continuation forc√©e malgr√© les erreurs de types" -ForegroundColor Yellow
}

# Build de l'application
Write-Host "üî® Build de l'application..." -ForegroundColor Yellow
npm run build
if ($LASTEXITCODE -ne 0) {
    Write-Host "‚ùå √âchec du build" -ForegroundColor Red
    exit 1
}

# Migration de la base de donn√©es
Write-Host "üóÑÔ∏è Migration de la base de donn√©es..." -ForegroundColor Yellow
Set-Location backend
npm run db:migrate
if ($LASTEXITCODE -ne 0) {
    Write-Host "‚ùå √âchec de la migration" -ForegroundColor Red
    exit 1
}
Set-Location ..

# V√©rification Git
Write-Host "üìã V√©rification du statut Git..." -ForegroundColor Yellow
$gitStatus = git status --porcelain
if ($gitStatus) {
    Write-Host "‚ö†Ô∏è Fichiers non commit√©s d√©tect√©s:" -ForegroundColor Yellow
    Write-Host $gitStatus -ForegroundColor Yellow
    
    if (-not $Force) {
        $response = Read-Host "Voulez-vous continuer malgr√© les fichiers non commit√©s? (y/N)"
        if ($response -ne "y" -and $response -ne "Y") {
            Write-Host "‚ùå D√©ploiement annul√©" -ForegroundColor Red
            exit 1
        }
    }
}

# Commit des changements
Write-Host "üíæ Commit des changements..." -ForegroundColor Yellow
$timestamp = Get-Date -Format "yyyy-MM-dd HH:mm:ss"
git add .
git commit -m "Deploy: Modernized version 2.0.0 - $timestamp"
if ($LASTEXITCODE -ne 0) {
    Write-Host "‚ö†Ô∏è Aucun changement √† commiter" -ForegroundColor Yellow
}

# Push vers le repository
Write-Host "üöÄ Push vers le repository..." -ForegroundColor Yellow
git push origin main
if ($LASTEXITCODE -ne 0) {
    Write-Host "‚ùå √âchec du push" -ForegroundColor Red
    exit 1
}

# Attendre le d√©ploiement Vercel
Write-Host "‚è≥ Attente du d√©ploiement Vercel..." -ForegroundColor Yellow
Write-Host "   V√©rifiez le statut sur: https://vercel.com/dashboard" -ForegroundColor Cyan
Write-Host "   URL de l'application: https://agent-position.vercel.app" -ForegroundColor Cyan

# Test de sant√© apr√®s d√©ploiement
Write-Host "üè• Test de sant√© apr√®s d√©ploiement..." -ForegroundColor Yellow
Start-Sleep -Seconds 30

try {
    $healthResponse = Invoke-RestMethod -Uri "https://agent-position.vercel.app/api/health" -Method Get
    if ($healthResponse.success) {
        Write-Host "‚úÖ Application d√©ploy√©e et op√©rationnelle" -ForegroundColor Green
        Write-Host "   Status: $($healthResponse.status)" -ForegroundColor Green
        Write-Host "   Uptime: $($healthResponse.uptime) secondes" -ForegroundColor Green
    } else {
        Write-Host "‚ö†Ô∏è Application d√©ploy√©e mais probl√®me de sant√© d√©tect√©" -ForegroundColor Yellow
    }
} catch {
    Write-Host "‚ö†Ô∏è Impossible de v√©rifier la sant√© de l'application" -ForegroundColor Yellow
    Write-Host "   V√©rifiez manuellement: https://agent-position.vercel.app" -ForegroundColor Cyan
}

# R√©sum√© du d√©ploiement
Write-Host "`nüìä R√©sum√© du d√©ploiement" -ForegroundColor Green
Write-Host "========================" -ForegroundColor Green
Write-Host "‚úÖ Environnement: $Environment" -ForegroundColor Green
Write-Host "‚úÖ Tests: $(if ($SkipTests) { 'Ignor√©s' } else { 'Ex√©cut√©s' })" -ForegroundColor Green
Write-Host "‚úÖ Build: R√©ussi" -ForegroundColor Green
Write-Host "‚úÖ Migration: R√©ussie" -ForegroundColor Green
Write-Host "‚úÖ D√©ploiement: R√©ussi" -ForegroundColor Green
Write-Host "`nüåê URLs importantes:" -ForegroundColor Cyan
Write-Host "   Application: https://agent-position.vercel.app" -ForegroundColor Cyan
Write-Host "   API Health: https://agent-position.vercel.app/api/health" -ForegroundColor Cyan
Write-Host "   Dashboard: https://agent-position.vercel.app/dashboard.html" -ForegroundColor Cyan
Write-Host "   Admin: https://agent-position.vercel.app/admin-agents.html" -ForegroundColor Cyan

Write-Host "`nüéâ D√©ploiement termin√© avec succ√®s!" -ForegroundColor Green
